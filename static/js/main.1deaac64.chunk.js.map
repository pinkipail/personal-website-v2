{"version":3,"sources":["Elements/LoadingLine/LoadingLine.js","Elements/LoaderPage/LoaderPage.js","App.js","index.js","Elements/LoaderPage/LoaderPage.module.css","Elements/LoadingLine/LoadingLine.module.css"],"names":["timeoutId","progress","LoadingLine","animation","lineRef","useRef","useEffect","element","current","setInterval","gsap","to","width","duration","animatingEnter","clearTimeout","fromTo","autoAlpha","delay","ease","animatingEndOfLine","animatingExit","className","classes","line","ref","lineInner","year","Date","getFullYear","LoaderPage","containerRef","textRef","animatingOpacity","loader","loaderContent","lineWrap","MainPage","React","lazy","Cursor","App","useState","isLoading","setIsLoading","Transition","in","timeout","mountOnEnter","unmountOnExit","state","fallback","onLoading","ReactDOM","render","document","getElementById","module","exports"],"mappings":"sLAOIA,E,6EAHAC,EAAW,EAoCAC,MA/Bf,YAAqC,IAAdC,EAAa,EAAbA,UACfC,EAAUC,mBAoBhB,OAnBAC,qBAAU,WACU,YAAdH,GAcN,WAyC2BI,EAxCLH,EAAQI,QAyC9BR,EAAYS,aAAY,WACtBR,IA/DW,IA+DWA,GAhEb,EAiETS,IAAKC,GACHJ,EACA,CACEK,MAAM,GAAD,OAAKX,EAAL,KACLY,SAAU,MAGb,KAVL,IAA6BN,EAtDvBO,GAEgB,YAAdX,GAKN,WACEY,aAAaf,GAuBSO,EAtBLH,EAAQI,QAuB3BE,IAAKM,OACHT,EACA,CAAEU,UAAW,GACb,CACEA,UAAW,EACXJ,SAAU,GACVK,MAAO,GACPC,KAAM,cAKZ,SAA4BZ,GAC1BG,IAAKC,GACHJ,EACA,CACEK,MAAO,OACPC,SAAU,KAvCZO,CAAmBhB,EAAQI,SAqB/B,IAA0BD,EA5BpBc,KAED,CAAClB,IAaF,qBAAKmB,UAAWC,IAAQC,KAAxB,SACE,qBACEC,IAAKrB,EACLkB,UAAWC,IAAQG,e,oBC3BrBC,GAAO,IAAIC,MAAOC,cAqCTC,MAnCf,YAAoC,IAAd3B,EAAa,EAAbA,UACd4B,EAAe1B,mBACf2B,EAAU3B,mBAahB,OAXAC,qBAAU,WACU,YAAdH,IAMJ8B,EAAiBF,EAAavB,SAC9ByB,EAAiBD,EAAQxB,YAJxB,CAACL,IAQF,sBACEsB,IAAKM,EACLT,UAAWC,IAAQW,OAFrB,UAIE,sBACET,IAAKO,EACLV,UAAWC,IAAQY,cAFrB,6BAKE,uBALF,wBAMgBR,KAEhB,qBAAKL,UAAWC,IAAQa,SAAxB,SACE,cAAC,EAAD,CAAajC,UAAWA,UAUhC,SAAS8B,EAAiB1B,GACxBG,IAAKM,OACHT,EACA,CAAEU,UAAW,GACb,CACEA,UAAW,EACXJ,SAAU,GACVK,MAAO,GACPC,KAAM,c,UCnDNkB,EAAWC,IAAMC,MAAK,kBAAM,6DAC5BC,EAASF,IAAMC,MAAK,kBAAM,sDAEjB,SAASE,IACtB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAMA,OACE,qCACE,cAACC,EAAA,EAAD,CACEC,GAAIH,EACJI,QAAS,IACTC,cAAY,EACZC,eAAa,EAJf,SAMG,SAACC,GAAD,OAAY,cAAC,EAAD,CAAY/C,UAAW+C,OAGtC,cAAC,WAAD,CAAUC,SAAU,KAApB,SACE,cAACd,EAAD,CAAUe,UAhBhB,WACER,GAAa,QAkBX,cAAC,WAAD,CAAUO,SAAU,KAApB,SACE,cAACX,EAAD,S,MC1BRa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCJjDC,EAAOC,QAAU,CAAC,OAAS,2BAA2B,cAAgB,kCAAkC,SAAW,+B,kBCAnHD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,UAAY,kC","file":"static/js/main.1deaac64.chunk.js","sourcesContent":["import gsap from 'gsap/gsap-core';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport classes from './LoadingLine.module.css';\r\n\r\nlet progress = 0;\r\nconst step = 4;\r\nconst result = 100;\r\nlet timeoutId;\r\n\r\nfunction LoadingLine({ animation }) {\r\n  const lineRef = useRef();\r\n  useEffect(() => {\r\n    if (animation === 'entered') {\r\n      animatingEnter();\r\n    }\r\n    if (animation === 'exiting') {\r\n      animatingExit();\r\n    }\r\n  }, [animation]);\r\n\r\n  function animatingExit() {\r\n    clearTimeout(timeoutId);\r\n    animatingOpacity(lineRef.current);\r\n    animatingEndOfLine(lineRef.current);\r\n  }\r\n\r\n  function animatingEnter() {\r\n    animatingMoveOfLine(lineRef.current);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.line}>\r\n      <div\r\n        ref={lineRef}\r\n        className={classes.lineInner}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingLine;\r\n\r\n// utils\r\n\r\nfunction animatingOpacity(element) {\r\n  gsap.fromTo(\r\n    element,\r\n    { autoAlpha: 1 },\r\n    {\r\n      autoAlpha: 0,\r\n      duration: 0.5,\r\n      delay: 0.5,\r\n      ease: 'power1.in',\r\n    },\r\n  );\r\n}\r\n\r\nfunction animatingEndOfLine(element) {\r\n  gsap.to(\r\n    element,\r\n    {\r\n      width: '100%',\r\n      duration: 0.5,\r\n    },\r\n  );\r\n}\r\n\r\nfunction animatingMoveOfLine(element) {\r\n  timeoutId = setInterval(() => {\r\n    progress += (result - progress) / step;\r\n    gsap.to(\r\n      element,\r\n      {\r\n        width: `${progress}%`,\r\n        duration: 1,\r\n      },\r\n    );\r\n  }, 1000);\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport gsap from 'gsap/gsap-core';\r\nimport LoadingLine from '../LoadingLine/LoadingLine';\r\n\r\n// TODO: Улучшить анимация загрузки https://www.behance.net/gallery/63574251/Personal-Portfolio-Website-Design?tracking_source=search_projects_recommended%7Cwebsite%20personal\r\nimport classes from './LoaderPage.module.css';\r\n\r\nconst year = new Date().getFullYear();\r\n\r\nfunction LoaderPage({ animation }) {\r\n  const containerRef = useRef();\r\n  const textRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (animation === 'exiting') {\r\n      animatingExit();\r\n    }\r\n  }, [animation]);\r\n\r\n  function animatingExit() {\r\n    animatingOpacity(containerRef.current);\r\n    animatingOpacity(textRef.current);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className={classes.loader}\r\n    >\r\n      <div\r\n        ref={textRef}\r\n        className={classes.loaderContent}\r\n      >\r\n        VASILIIY FEDOROV\r\n        <br />\r\n        ©Copyright — {year}\r\n      </div>\r\n      <div className={classes.lineWrap}>\r\n        <LoadingLine animation={animation} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoaderPage;\r\n\r\n// utils\r\n\r\nfunction animatingOpacity(element) {\r\n  gsap.fromTo(\r\n    element,\r\n    { autoAlpha: 1 },\r\n    {\r\n      autoAlpha: 0,\r\n      duration: 0.5,\r\n      delay: 0.5,\r\n      ease: 'power1.in',\r\n    },\r\n  );\r\n}\r\n","import React, { Suspense, useState } from 'react';\r\nimport { Transition } from 'react-transition-group';\r\nimport LoaderPage from './Elements/LoaderPage/LoaderPage';\r\nimport './App.css';\r\n\r\nconst MainPage = React.lazy(() => import('./page/MainPage/MainPage'));\r\nconst Cursor = React.lazy(() => import('./Elements/Cursor/Cursor'));\r\n\r\nexport default function App() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  function disablingLoader() {\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Transition\r\n        in={isLoading}\r\n        timeout={1000}\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        {(state) => (<LoaderPage animation={state} />)}\r\n      </Transition>\r\n\r\n      <Suspense fallback={null}>\r\n        <MainPage onLoading={disablingLoader} />\r\n      </Suspense>\r\n\r\n      <Suspense fallback={null}>\r\n        <Cursor />\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"LoaderPage_loader__1SJN6\",\"loaderContent\":\"LoaderPage_loaderContent__37arE\",\"lineWrap\":\"LoaderPage_lineWrap__1eJIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"LoadingLine_line__2kb3_\",\"lineInner\":\"LoadingLine_lineInner__vdu1b\"};"],"sourceRoot":""}